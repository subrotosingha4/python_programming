# -*- coding: utf-8 -*-
"""args-kwargs-better-explained.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mvRr8xVXSb00m1G_wTix1XlAiTsXsqyw
"""

#if you need to pass flexible amount of arguments in a function then we use *args
#args hold the arguments passed by a user as a tuple
#then you can loop through the tuple/args to compute

#if you need to pass a flexible argument in a key-value fashion then we use **kwargs
#kwargs take arguments as dictionary
#then you call .item method using a loop to access the key and values

def sum_all(*args):
    """Take flexible amount of arguments then sum them all"""
    #initialize a variable called summ
    summ=0
    #loop through the arguments and sum them all
    for value in args:
        summ=summ+value

    return summ

#call the function
print(sum_all(1))
print(sum_all(1,2))
print(sum_all(1,2,3))

def name_age(**kwargs):
  """Retune name and age of persons"""
  for key, value in kwargs.items():
    print("Name: ",key,"Age: ", value)

#call_function
name_age(Subroto=30)